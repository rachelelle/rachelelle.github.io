---
layout: post
title:  SAP BUILD Simplification of Controls
date:   2017-04-06 14:22:04 -0700
categories: featured
label: Web • Prototyping Tool 
tagline: Simplifying Controls
thumbnail: smartbrush-thumb.png
main-img: BUILDMainImg.jpg
summary:  <a href="http://build.me" target="_blank">BUILD</a> is a suite of design tools in the SAP Cloud Platform that empowers SAP customers, partners, and business analysts to build enterprise apps and validate them with users, while learning the design-led development process. I enhanced the usability of the most frequently used UI5 controls in BUILD’s Prototyping Tool.
---
<section class="project-body">
<p>
<b>Due to a non-disclosure agreement, some parts of my work cannot be shown yet. I'm happy to talk about my experiences in person.</b> 
</p>
  <h2>Problem</h2>
<p>
<b>Forms</b> are used to display information, input fields, and other data on pages, but they are difficult to edit and manipulate, given its complex, multiple-layer hierarchy. Quick, simple tasks from adding rows to adding individuals controls to a row were unintuitive and time-consuming to complete. The usability issues were deeply rooted in the mindset mismatch of how users expected to manipulate a Form vs. the unintuitive structure of Forms. 
<br>
<br>
<a href="#formresearch">&rarr; Learn more about the Form research findings.</a>
 </p>
 <p>
<b>Radio Buttons</b> previously existed as an unusable, individual radio button control. They lacked the functionality of selecting a radio button out of a group of radio buttons. Along with the dire need to fix the functionality also came the opportunity to enhance radio buttons’ usability within a Form.
<br>
<br>
<a href="#radiobuttons">&rarr; See how I made radio buttons usable as a group.</a>
 </p>
</section>
<hr>
<section class="project-body">
  <h2>Role</h2>
  <p>
  <ul>
  <li>Led end-to-end design efforts from user research to design implementation while collaborating with Product Managers and frontend developers</li>
    <li>Achieved greater usability with key stakeholders</li>
  <li>Introduced direct manipulation on Canvas</li>
  <li>Improved properties panel settings and more intuitive layout formatting</li>
  </ul>
  </p>
</section>
<hr>
<section class="project-body">
  <h2>Reformation of Forms</h2>
  <h3 class="project-body" id="formresearch">Mindset Mismatch</h3>
  <p>
  I first tested the current implementation of Forms to gain a deeper understanding of the usability issues. I discovered from usability testing that users’ mindset of creating a Form did not match what was in place. Their expectations of adding rows and elements to rows were based on their experiences of using software like Microsoft Excel and Powerpoint.
  </p>
  <blockquote>
    I got frustrated when I was trying to add an extra row, and dragging was not being consistent
    <footer>Research Participant</footer>
  </blockquote>
  <h3 class="project-body">Foundational Changes</h3>
  <p>
 We explored many ideas to improve manipulation and structure of Forms while working within the technical constraints of UI5 Controls and the limitations of dragging and dropping controls on the Canvas. 
 </p>
 <p>
 I first developed the following concepts that were most valuable and quickest to implement:
</p>
  <b>One Form</b>
  <br>
 I simplified from two Form Controls (Simple Form and Advanced Form) to one Form Control. Users didn’t understand the differences between the two types of Forms, so we consolidated to one.
<figure>
    <img src="{{ site.baseurl }}/img/portfolio/build/OneForm.jpg" class="img-responsive center-block">
    <figcaption>From two indistinguishable Form types to one Form type</figcaption>
</figure>
<br>
<b>Form Row</b>
<br>
I introduced the concept of a Form Row (comprises of a Label and another Form Control element on the right side), so that users could easily select, rearrange, duplicate, and delete rows in a Form. 
<figure>
    <img src="{{ site.baseurl }}/img/portfolio/build/FormRow.gif" class="img-responsive center-block">
    <figcaption>Form Row</figcaption>
  </figure>
  <b>Show Form-specific Controls</b>
  <br>
 After observing users struggling to quickly find the appropriate control to add to a Form Row, I added the capability to surface controls that can be added to Forms whenever a Form or any element within a Form is clicked. This simpler method of viewing controls specific to a selected control will be applied to other controls that contain children elements.
<figure>
    <img src="{{ site.baseurl }}/img/portfolio/build/FormSpecificControls.gif" class="img-responsive center-block">
    <figcaption>Controls Panel only shows Form Controls when a Form or its children are selected</figcaption>
  </figure>
<b>Contextual Right Click Menu</b>
<br>
 I incorporated an intuitive alternative to adding, duplicating, and deleting a row.  It has the enhanced usability of adding a row above or below a selected row.
<figure>
    <img src="{{ site.baseurl }}/img/portfolio/build/FormRightClickMenu.gif" class="img-responsive center-block">
    <figcaption>Contextual Right Click Menu for a Row and Form</figcaption>
  </figure>
  <h3 class="project-body">Unexpected Challenge: Form Groups</h3>
  <p>
As we were ready to finalize designs, a new requirement was introduced for us to include Form Groups into the Forms. We revisited the drawing board to see how the extra layer of hierarchy would change the structure of our designs. In the meantime, our foundational changes were being built in the production site and the developers decided to add the Form Groups to stick with the requirements of including Form Groups in a Form. Even after coming up with some new concepts of Forms including the manipulations of Form Groups, we decided to test participants’ ability to build a form with the up-to-date version of Forms in the production site to identify usability roadblocks and narrow down design concepts. For the usability test, we provided screenshots of a Purchase Order form (a common customer use case) for participants to recreate - from a simple form to a form with additional groups.
  </p>
    <blockquote>
    It shouldn't have taken 30 minutes to assemble this form
    <footer>Research Participant</footer>
  </blockquote>
  <p>
  Users still struggled to create a form because the process still required too many clicks to reach the lowest level of the Form hierarchy, the most edited level. Users failed to reformat and rearrange Form Groups for more elaborate forms.
  </p>
  <h3 class="project-body">Final Solution: Abstracting Layers</h3>
  <p>
    <b>Due to my non-disclosure agreement, I cannot display final designs. If you're interested in learning more, reach out and I would be happy to explain in more detail.</b>
  </p>
</section>
<hr>
<section class="project-body" id="radiobuttons">
  <h2>Radio Buttons: Better Together</h2>
  <p>
    <img src="{{ site.baseurl }}/img/portfolio/build/RadioButtons.png" class="img-responsive center-block">
  <h3 class="project-body">The Challenge</h3>
  <p>
  BUILD only had individual radio buttons and checkboxes that could be dragged onto the canvas from the Control Panel. I was tasked with figuring out how to best structure Radio Buttons, and how that could also apply to Checkboxes (when it came time to design the Checkboxes control).
    <figure>
    <img src="{{ site.baseurl }}/img/portfolio/build/RadioButton.png" class="img-responsive center-block">
    <figcaption>Original Radio Button Control</figcaption>
  </figure>
  </p>
  <h3 class="project-body">Testing the Multiple Choice Concept</h3>
  <figure>
    <img src="{{ site.baseurl }}/img/portfolio/build/radiobuttonpaperproto.jpg" class="img-responsive center-block">
    <figcaption>Testing the Multiple Choice concept with a paper prototype</figcaption>
  </figure>
  <p>
  Because the Checkbox control is structurally similar to the Radio Button control, I wanted to validate whether to combine Radio Buttons and Checkboxes under one control named “Multiple Choice.” In the case that the user wanted to switch from Radio Buttons to Checkboxes and vice versa, the user should be able to maintain the same data or text they inputted. We quickly tested the concept with a paper prototype. During research, we discovered that the concept of “Multiple Choice” conveys different meanings, especially to non-native English speakers. 
  </p>
<blockquote>
  To me, “Multiple Choice” means selecting multiple options so I would expect Checkboxes to appear if I dragged the control to the Canvas
  <footer>Business Analyst</footer>
</blockquote>
<p>
Based on those confusions, I decided to separate Radio Buttons and Checkboxes as two separate controls. Participants thought that providing the capability to switch between the two controls while maintaining the same data and text input was valuable.
  <h3 class="project-body">Shipping Changes</h3>
  <p>
  I made a new control with expanded capabilities so that multiple radio button groups could be included in Forms. 
  </p>
  <p>
  <b>Adding a New Radio Button</b>
    <figure>
    <img src="{{ site.baseurl }}/img/portfolio/build/addradiobutton.gif" class="img-responsive center-block">
    <figcaption>Adding a Radio Button through direct manipulation on the Canvas</figcaption>
  </figure>
  <b>Right Click Contextual Menu</b>
  <br>
  I provided the right click contextual menu for Radio Buttons group-level and individual-level. Users can easily duplicate, copy, or delete a radio button group. For individual radio buttons, users can add radio buttons before or after the selected button.
    <figure>
      <img src="{{ site.baseurl }}/img/portfolio/build/RightClickMenu.gif" class="img-responsive center-block">
      <figcaption>Right click menu on Radio Buttons group and individual radio buttons</figcaption>
    </figure>
  </p>
  <p>
  <b>Formatting Horizontal and Vertical Layout</b>
  <br>
  I chose to display radio buttons in the more readable vertical layout by default. If desired, users also have the option to format the radio buttons in a horizontal format.
    <figure>
      <img src="{{ site.baseurl }}/img/portfolio/build/VerticalHorizontal.gif" class="img-responsive center-block">
      <figcaption>Select horizontal or vertical layout settings in the Properties Panel</figcaption>
    </figure>
  </p>
</section>
<hr>
<section class="project-body">
  <h2>Lessons Learned</h2>
  <p>
<ul>
<li>
<b>Changes Beyond One Control</b>: In the process of redesigning controls, I had to be mindful of any changes made to Form or Radio Buttons and how they could affect the usability of other controls. Simplifying a control means finding opportunities to simplify other structurally similar controls.
</li>
<li>
<b>Get unstuck</b> by testing early with incremental changes. Finding the right fidelity to test can save time and eliminate technical debt in the long run. For Radio Buttons, paper prototyping the multiple choice concept proved to be the best way to quickly disprove my hypothesis and determine which path to choose for my design.
</li>
<li>
<b>Document Your Progress</b>: Organizing ideas from brainstorming sessions, design reviews, and meeting notes allowed me to revisit ideas that were conceived from earlier parts of the process but tossed away. They may prove to be viable solutions later down the road (highly recommend Dropbox Paper to keep track!)
</li>
</ul>
  </p>
</section>
<hr>
<section class="project-body">
  <h2>Thank you</h2>
  <p>
I’m grateful for the unique challenge of designing UI controls with such a supportive, talented team. Shoutout to Suhaib Syed (Designer), Wenjing Yang (Designer), and Hong Wang (Product Manager) for leading the stride on simplifying controls and improving the overall usability of the Prototyping Tool in BUILD!
  </p>
</section>